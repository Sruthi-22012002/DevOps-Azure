# Build stage for the frontend (Node.js)
FROM node:16 AS build

WORKDIR /app

# Copy package.json and package-lock.json to avoid network dependency issues
COPY package.json package-lock.json ./
RUN npm config set timeout 600000 \
    && npm config set registry https://registry.npmmirror.com \
    && npm config set strict-ssl false

# Copy the rest of the frontend code and install dependencies
COPY . .
RUN npm install --offline || npm install --legacy-peer-deps --force

# Build the frontend
RUN npm run build

# Nginx stage to serve the frontend
FROM nginx:alpine

# Copy the built frontend into Nginx's default html directory
COPY --from=build /app/build /usr/share/nginx/html

# Expose the port for Nginx (default is 80)
EXPOSE 80

