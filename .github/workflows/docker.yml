name: Deploy Frontend and Backend

on:
  push:
    branches:
      - main  # Trigger on pushes to the `main` branch
  pull_request:  # Optional: Trigger on pull requests to the `main` branch
    branches:
      - main

jobs:
  # Frontend Build and Deploy Job
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install --legacy-peer-deps
        working-directory: /home/sruthi/ems-ops-phase-0/react-hooks-frontend/package.json   # Adjust path if `package.json` is in `frontend/`

      - name: Build Frontend
        run: npm run build
        working-directory: /home/sruthi/ems-ops-phase-0/react-hooks-frontend/package.json

      - name: Dockerize Frontend
        run: |
          docker build -t frontend-app:latest -f ./Dockerfile.frontend .

      - name: Push Frontend Docker Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          docker tag frontend-app:latest $DOCKER_USERNAME/frontend-app:latest
          docker push $DOCKER_USERNAME/frontend-app:latest

  # Backend Build and Deploy Job
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Build Backend Application
        run: |
          ./mvnw clean package

      - name: Dockerize Backend
        run: |
          docker build -t backend-app:latest -f ./Dockerfile.backend .

      - name: Push Backend Docker Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          docker tag backend-app:latest $DOCKER_USERNAME/backend-app:latest
          docker push $DOCKER_USERNAME/backend-app:latest

  # Deploy Job (Optional)
  deploy:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
            docker pull $DOCKER_USERNAME/frontend-app:latest
            docker pull $DOCKER_USERNAME/backend-app:latest
            docker-compose up -d
          EOF

