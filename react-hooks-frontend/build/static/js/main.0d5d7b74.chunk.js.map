{"version":3,"sources":["components/FooterComponent.js","components/HeaderComponent.js","services/EmployeeService.js","components/ListEmployeeComponent.js","components/AddEmployeeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","className","HeaderComponent","href","EMPLOYEE_BASE_REST_API_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","useState","employees","setEmployees","useEffect","getAllEmployees","EmployeeService","then","response","data","console","log","catch","error","to","map","id","firstName","lastName","emailId","onClick","deleteEmployee","style","marginLeft","AddEmployeeComponent","setFirstName","setLastName","setEmailId","history","useHistory","useParams","getEmployeeById","type","placeholder","name","value","onChange","e","target","preventDefault","updateEmployee","push","createEmployee","saveOrUpdateEmployee","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5d7b74.chunk.js","sourcesContent":["import React from 'react'\n\nconst FooterComponent = () => {\n    return (\n        <div>\n            <footer className = \"footer\">\n                 <span className=\"text-muted\">All Rights Reserved 2021 @JavaGuides</span>\n            </footer>\n        </div>\n    )\n}\n\nexport default FooterComponent\n","import React from 'react'\n\nconst HeaderComponent = () => {\n    return (\n        <div>\n            <header>\n                <nav className = \"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div>\n                        <a href = \"https://javaguides.net\" className = \"navbar-brand\">\n                            Employee Management Application\n                        </a>\n                    </div>\n\n                </nav>\n            </header>\n        </div>\n    )\n}\n\nexport default HeaderComponent\n","import axios from 'axios'\n\nconst EMPLOYEE_BASE_REST_API_URL = 'http://localhost:8080/api/v1/employees';\n\nclass EmployeeService{\n\n    getAllEmployees(){\n        return axios.get(EMPLOYEE_BASE_REST_API_URL)\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_BASE_REST_API_URL, employee)\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n    }\n\n    updateEmployee(employeeId, employee){\n        return axios.put(EMPLOYEE_BASE_REST_API_URL + '/' +employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n    }\n}\n\nexport default new EmployeeService();","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport EmployeeService from '../services/EmployeeService'\n\nconst ListEmployeeComponent = () => {\n\n    const [employees, setEmployees] = useState([])\n\n    useEffect(() => {\n\n        getAllEmployees();\n    }, [])\n\n    const getAllEmployees = () => {\n        EmployeeService.getAllEmployees().then((response) => {\n            setEmployees(response.data)\n            console.log(response.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n\n    const deleteEmployee = (employeeId) => {\n       EmployeeService.deleteEmployee(employeeId).then((response) =>{\n        getAllEmployees();\n\n       }).catch(error =>{\n           console.log(error);\n       })\n        \n    }\n\n    return (\n        <div className = \"container\">\n            <h2 className = \"text-center\"> List Employees </h2>\n            <Link to = \"/add-employee\" className = \"btn btn-primary mb-2\" > Add Employee </Link>\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <th> Employee Id </th>\n                    <th> Employee First Name </th>\n                    <th> Employee Last Name </th>\n                    <th> Employee Email Id </th>\n                    <th> Actions </th>\n                </thead>\n                <tbody>\n                    {\n                        employees.map(\n                            employee =>\n                            <tr key = {employee.id}> \n                                <td> {employee.id} </td>\n                                <td> {employee.firstName} </td>\n                                <td>{employee.lastName}</td>\n                                <td>{employee.emailId}</td>\n                                <td>\n                                    <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\n                                    <button className = \"btn btn-danger\" onClick = {() => deleteEmployee(employee.id)}\n                                    style = {{marginLeft:\"10px\"}}> Delete</button>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ListEmployeeComponent\n","import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [id])\n\n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form>\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        value = {firstName}\n                                        onChange = {(e) => setFirstName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" onClick = {(e) => saveOrUpdateEmployee(e)} >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n","import './App.css';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport AddEmployeeComponent from './components/AddEmployeeComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <HeaderComponent />\n        <div className= \"container\">\n          <Switch>\n              <Route exact path = \"/\" component = {ListEmployeeComponent}></Route>\n              <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\n              <Route path = \"/add-employee\" component = {AddEmployeeComponent} ></Route>\n              <Route path = \"/edit-employee/:id\" component = {AddEmployeeComponent}></Route>\n            </Switch>\n        </div>\n        <FooterComponent />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}